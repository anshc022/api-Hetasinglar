{
  "name": "hetasinglar-backend",
  "version": "1.0.0",
  "description": "Backend for HetaSinglar dating app",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "start-with-alerts": "node start-with-alerts.js",
    "start-production-check": "node start-with-alerts.js production",
    "dev": "nodemon server.js",
    "monitor": "node health-monitor.js",
    "monitor-production": "node health-monitor.js production",
    "check-production": "node production-status.js",
    "test-endpoints": "node scan-endpoints.js",
    "test-endpoints-full": "node test-all-endpoints.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "deploy:aws": "powershell -ExecutionPolicy Bypass -File deploy-aws.ps1",
    "deploy:aws-bash": "bash deploy-aws.sh",
    "eb:init": "eb init --platform \"Node.js 18 running on 64bit Amazon Linux 2\" --region us-east-1 hetasinglar-api",
    "eb:create": "eb create hetasinglar-prod --instance-type t3.micro --min-instances 1 --max-instances 4",
    "eb:deploy": "eb deploy hetasinglar-prod",
    "eb:status": "eb status",
    "eb:logs": "eb logs",
    "eb:health": "eb health",
    "production:validate": "node -e \"console.log('Environment Check:'); console.log('NODE_ENV:', process.env.NODE_ENV); console.log('MONGODB_URI:', process.env.MONGODB_URI ? 'Set' : 'Missing'); console.log('JWT_SECRET:', process.env.JWT_SECRET ? 'Set' : 'Missing');\"",
    "production:test": "node production-test.js",
    "ec2:launch": "powershell -ExecutionPolicy Bypass -File launch-ec2.ps1",
    "ec2:launch-bash": "bash launch-ec2.sh",
    "ec2:setup": "scp ec2-setup.sh ec2-user@$EC2_HOST:~/ && ssh ec2-user@$EC2_HOST 'chmod +x ec2-setup.sh && sudo ./ec2-setup.sh'",
    "ec2:deploy": "ssh ec2-user@$EC2_HOST './deploy.sh'",
    "ec2:monitor": "ssh ec2-user@$EC2_HOST './monitor.sh'",
    "ec2:logs": "ssh ec2-user@$EC2_HOST 'pm2 logs hetasinglar-api'"
  },
  "dependencies": {
    "axios": "^1.10.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.0",
    "mongoose": "^6.9.0",
    "multer": "^2.0.1",
    "ws": "^8.18.1"
  },
  "devDependencies": {
    "nodemon": "^2.0.20"
  }
}
